{"version":3,"sources":["components/ExternalLinks.js","layout/Header.js","components/ListItemLink.js","layout/DrawerContent.js","components/Home.js","components/CodigoDeConducta.js","layout/Content.js","components/App.js","index.js"],"names":["SlackIcon","SvgIcon","d","TwitchIcon","ExternalLinks","classes","this","props","className","root","IconButton","aria-label","target","href","rel","appBarButton","React","Component","withStyles","theme","display","justifyContent","color","useStyles","makeStyles","appBar","backgroundColor","breakpoints","up","width","menuButton","marginRight","spacing","toolbar","mixins","title","flexGrow","Header","onClick","Fragment","AppBar","position","Toolbar","edge","Typography","variant","noWrap","Hidden","xsDown","implementation","ListItemLink","icon","primary","to","renderLink","useMemo","forwardRef","itemProps","ref","innerRef","ListItem","button","component","ListItemIcon","ListItemText","DrawerContent","Divider","List","Home","CodigoDeConducta","drawer","flexShrink","zIndex","drawerPaper","content","padding","NoMatch","location","pathname","Content","useState","mobileOpen","setMobileOpen","handleDrawerToggle","smUp","Drawer","open","onClose","paper","ModalProps","keepMounted","exact","path","App","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6535be2.chunk.js","sourcesContent":["import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport RedditIcon from '@material-ui/icons/Reddit';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n  },\n  appBarButton: {\n    color: 'white',\n  },\n});\n\nfunction SlackIcon() {\n  return (\n    <SvgIcon>\n      <path d=\"M6,15A2,2 0 0,1 4,17A2,2 0 0,1 2,15A2,2 0 0,1 4,13H6V15M7,15A2,2 0 0,1 9,13A2,2 0 0,1 11,15V20A2,2 0 0,1 9,22A2,2 0 0,1 7,20V15M9,7A2,2 0 0,1 7,5A2,2 0 0,1 9,3A2,2 0 0,1 11,5V7H9M9,8A2,2 0 0,1 11,10A2,2 0 0,1 9,12H4A2,2 0 0,1 2,10A2,2 0 0,1 4,8H9M17,10A2,2 0 0,1 19,8A2,2 0 0,1 21,10A2,2 0 0,1 19,12H17V10M16,10A2,2 0 0,1 14,12A2,2 0 0,1 12,10V5A2,2 0 0,1 14,3A2,2 0 0,1 16,5V10M14,18A2,2 0 0,1 16,20A2,2 0 0,1 14,22A2,2 0 0,1 12,20V18H14M14,17A2,2 0 0,1 12,15A2,2 0 0,1 14,13H19A2,2 0 0,1 21,15A2,2 0 0,1 19,17H14Z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TwitchIcon() {\n  return (\n    <SvgIcon>\n         <path d=\"M4,2H22V14L17,19H13L10,22H7V19H2V6L4,2M20,13V4H6V16H9V19L12,16H17L20,13M15,7H17V12H15V7M12,7V12H10V7H12Z\" />\n    </SvgIcon>\n  );\n}\n\nclass ExternalLinks extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton \n            aria-label=\"github\"\n            target=\"_blank\" \n            href=\"https://github.com/r-argentina-programa/introduccion-a-js\"\n            rel=\"noopener noreferrer\" \n            className={classes.appBarButton}\n          >\n            <GitHubIcon />\n          </IconButton>\n        <IconButton \n            aria-label=\"youtube\"\n            target=\"_blank\" \n            href=\"https://www.youtube.com/channel/UCXfQLgiBQPIzBp8-nRsG0KA\"\n            rel=\"noopener noreferrer\" \n            className={classes.appBarButton}\n          >\n            <YouTubeIcon />\n          </IconButton>\n        <IconButton \n            aria-label=\"twitch\"\n            target=\"_blank\" \n            href=\"https://www.twitch.tv/rargentinaprograma/\"\n            rel=\"noopener noreferrer\"\n            className={classes.appBarButton}\n          >\n            <TwitchIcon />\n          </IconButton>\n          <IconButton \n            aria-label=\"reddit\"\n            target=\"_blank\" \n            href=\"https://www.reddit.com/r/argentina/comments/d9wzkh/alguno_que_ande_corto_de_guita_pero_muy/\"\n            rel=\"noopener noreferrer\"\n            className={classes.appBarButton}\n          >\n            <RedditIcon />\n          </IconButton>\n          <IconButton \n            aria-label=\"slack\"\n            target=\"_blank\" \n            href = \"https://join.slack.com/t/rargentinaprograma/shared_invite/enQtODAyODIzOTIwNTQ1LTNmNWVkMzcyMjVjZTk4MDk2ZjdjOTQ2MWNhYWFjMzZkNGU5ZTgxMWFmMjk3ZDRkYWUxNWRhZWZlNjI4ZmExZWI\"\n            rel=\"noopener noreferrer\"\n            className={classes.appBarButton}\n          >\n            <SlackIcon />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ExternalLinks);\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport ExternalLinks from '../components/ExternalLinks';\nimport Hidden from '@material-ui/core/Hidden';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: '#0c9ae7',\n    [theme.breakpoints.up('sm')]: {\n      width: '100%',\n    },\n  },\n  menuButton: {\n    color: 'white',\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  appBarButton: {\n    color: 'white',\n    display: 'flex',\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Header(props) {\n  const classes = useStyles();\n  const { onClick } = props;\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            aria-label=\"menu\"\n            edge=\"start\"\n            onClick={onClick}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            r/Argentina Programa\n          </Typography>\n          <Hidden xsDown implementation=\"css\">\n            <ExternalLinks/>\n          </Hidden>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  )\n}\n\nHeader.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <RouterLink to={to} {...itemProps} innerRef={ref} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nListItemLink.propTypes = {\n  icon: PropTypes.element,\n  primary: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nexport default ListItemLink;\n","import React from 'react';\nimport ListItemLink from '../components/ListItemLink'\nimport ExternalLinks from '../components/ExternalLinks'\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n  toolbar: {\n    ...theme.mixins.toolbar,\n    backgroundColor: '#0c9ae7'\n  },\n});\n\n\nclass DrawerContent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <div className={classes.toolbar}>\n          <ExternalLinks/>\n        </div>\n        <Divider />\n        <List>\n            <ListItemLink to=\"/\" primary=\"Home\" icon={<InboxIcon />} />\n            <ListItemLink to=\"/codigo-de-conducta\" primary=\"Codigo de conducta\" icon={<MailIcon />} />\n        </List>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(DrawerContent);\n","import React from 'react';\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <h1>Home</h1>\n      \n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction CodigoDeConducta() {\n  return (\n    <div>\n        <div><h1>Código de Conducta</h1><h2>Propósito</h2><p>Un objetivo principal de todas las conferencias y grupos de usuarios que se refieran a este Código de Conducta es ser inclusivos para la mayor cantidad de personas, con la mayor variedad de orígenes y conocimientos posibles. Como tal, nos comprometemos a ofrecer un ambiente amigable, seguro y acogedor para todos, sin importar género, orientación sexual, capacidad, etnia, estado socio-económico, religión o creencia.</p><p>Este Código de Conducta expresa nuestras expectativas con respecto a quienes participan de nuestra comunidad, así como también las consecuencias de comportamientos inaceptables.</p><p>Invitamos a todos los que participan de nuestros eventos a ayudarnos a crear experiencias seguras y positivas para todos.</p><h2>Ciudadanía de Código / Cultura / Tecnología abierta</h2><p>Un objetivo suplementario de este Código de Conducta es incrementar la ciudadanía de código/cultura/tecnología abierta, incentivando a sus participantes a reconocer y fortalecer las relaciones entre nuestras acciones y sus efectos en nuestra comunidad.</p><p>Las comunidades son espejo de las sociedades en las cuales existen y las acciones positivas son esenciales para contrarrestar las diversas formas de desigualdad y abuso de poder que existen en una sociedad.</p><p>Si Ud. ve a alguien haciendo un esfuerzo extra por asegurarse que nuestra comunidad sea acogedora, amistosa e incentiva a todos los que participan en ella a contribuir de manera completa, nos gustaría saberlo.</p><h2>Comportamiento esperado</h2><ul><li>Participe de un modo auténtico y activo. Al hacerlo contribuye a la salud y longevidad de esta comunidad.</li><li>Ejercite la consideración y el respeto en su discurso y en sus acciones.</li><li>Intente colaborar para evitar conflictos.</li><li>Absténgase de discursos o comportamientos despectivos, discriminatorios o abusivos.</li><li>Sea consciente de su entorno y de los/as otros/as participantes. Alerte a los líderes de la comunidad si nota alguna situación peligrosa, alguien sufriendo una situación comprometedora o violaciones de este Código de Conducta, incluso si parecieran poco importantes.</li></ul><h2>Comportamiento inaceptable</h2><p>Comportamientos inaceptables incluyen: discursos o acciones intimidantes, acosadores, abusivos, discriminatorios, despectivos o degradantes. El alcance incluye a todos/as los/as participantes de nuestra comunidad online en todos los eventos y comunicaciones personales llevadas a cabo en el contexto de las actividades de nuestra comunidad. Los lugares en donde se lleven a cabo eventos de la comunidad pueden ser compartidos con gente ajena a la misma, por favor sea respetuoso hacia las autoridades de dichos lugares.</p><p>Acoso incluye: daño o perjurio verbal o escrito relacionado con género, orientación sexual, raza, religión, incapacidad; uso inapropiado de imágenes de desnudez en espacios públicos (incluyendo presentaciones digitales); intimidación deliberada, acecho o persecución; fotografías o grabaciones abusivas; interrupción sostenida de presentaciones u de otros eventos; contacto físico inapropiado y atención sexual no deseada.</p><h2>Consecuencias del comportamiento inaceptable</h2><p>No serán tolerados los comportamientos inaceptables de parte de cualquier miembro de la comunidad, incluidos patrocinadores y aquellos/as con autoridad para tomar decisiones. Se espera de todos/as los/as miembros el inmediato cumplimiento al solicitársele suspender comportamientos inaceptables.</p><p>Si un miembro incurre en comportamientos inaceptables los organizadores de la comunidad pueden sancionarlo de cualquier forma que se considere apropiada, incluyendo la suspensión temporal o permanente de su participación en la comunidad, sin previo aviso (y sin reintegro del dinero, en caso de ser un evento pago).</p><h2>Si es testigo o víctima de comportamiento inaceptable</h2><p>Si Ud. es víctima o testigo de comportamiento inaceptable, o tiene cualquier otra preocupación o problema, por favor notifíquelo a un organizador de la comunidad tan pronto como sea posible. Puede encontrar una lista de los organizadores a contactar para cada una de las comunidades que apoyen este código de conducta al final de esta página.</p><p>Además, los organizadores de la comunidad se encuentran disponibles para ayudar a los miembros a contactar a las fuerzas policiales locales o, de lo contrario, para ayudar a sentirse seguros a aquellos que hayan sido víctimas de comportamiento inaceptable. En el contexto de eventos presenciales, los organizadores también proveerán escolta a las personas que hayan sufrido dichas experiencias.</p><h2>Desagravios</h2><p>Si Ud. siente que ha sido falsa o injustamente acusado/a de violar este Código de Conducta, se le sugiere notificar a uno de los organizadores del evento con una descripción concisa del agravio. El mismo será contemplado y resuelto de acuerdo a las políticas existentes.</p><h2>Alcance</h2><p>Se espera que todos los participantes de la comunidad (colaboradores/as -pagos o no-, patrocinadores y otros/as invitados/as) se atengan a este Código de Conducta en todos los lugares de encuentro de la comunidad –online o en persona– así como en todas las comunicaciones uno-a-uno relacionadas con actividades de la comunidad.</p><h2>Información de contacto</h2><ul><li>Alejandro Oviedo, <a href=\"mailto:alejandro.oviedo.g@gmail.com\">alejandro.oviedo.g@gmail.com</a></li><li>Camila Cepeda, <a href=\"mailto:camicepe@gmail.com\">camicepe@gmail.com</a></li><li>Cristhian Duran, <a href=\"mailto:durancristhian@gmail.com\">durancristhian@gmail.com</a></li><li>Mateo Silguero, <a href=\"mailto:mfsilguero@gmail.com\">mfsilguero@gmail.com</a></li><li>Sergio Rafael Gianazza, <a href=\"mailto:sgianazza@gmail.com\">sgianazza@gmail.com</a></li></ul><h2>Licencia y atribución</h2><p>El Berlin Code of Conduct se encuentra distribuido bajo una licencia Creative Commons Attribution-ShareAlike. Está basado en el <a href=\"https://pdxruby.org/codeofconduct\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">pdx.rb code of conduct</a>, que también es distribuido bajo la misma licencia.</p></div>\n    </div>\n  );\n}\n\nexport default CodigoDeConducta;\n\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport Header from './Header'\nimport DrawerContent from './DrawerContent'\nimport Home from '../components/Home'\nimport CodigoDeConducta from '../components/CodigoDeConducta'\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n      zIndex: 0\n    },\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  title: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      flexGrow: 1,\n    }\n  },\n}));\n\nfunction Content(props) {\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Header onClick={handleDrawerToggle} />\n      <Router>      \n        <nav className={classes.drawer}>\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              variant=\"temporary\"\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              classes={{ paper: classes.drawerPaper, }}\n              ModalProps={{ keepMounted: true, }}\n            >\n              <DrawerContent />\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{ paper: classes.drawerPaper }}\n              variant=\"permanent\"\n            >\n              <DrawerContent />\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar}/>\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route path='/codigo-de-conducta' component={CodigoDeConducta} />\n              <Route component={NoMatch} />\n            </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nfunction NoMatch({ location }) {\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n\nexport default Content;\n","import React from 'react';\n\nimport Content from '../layout/Content'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport '../css/app.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className=\"container\">\n        <Content />\n      </div>\n  </React.Fragment>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}